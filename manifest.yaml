---
namespace: librenms

stack:
  defines: process-group
  inherits: librenms/common
  runnable-list:
    - librenms/db
    - librenms/server

common:
  metadata:
    website: https://www.librenms.org/
    name: LibreNMS
    icon: https://www.librenms.org/images/LibreNMS-Logo.svg
    publisher: monk.io
    description: |
      LibreNMS is a free and open-source network monitoring and management system that provides comprehensive monitoring and alerting for networks of all sizes.

      It is designed to be easy to use and highly customizable, with a user-friendly web interface that allows users to monitor network health and performance in real-time.

      LibreNMS supports a wide range of network devices, protocols, and vendors, including SNMP-based devices such as routers, switches, firewalls, servers, and storage devices.

      It also provides advanced features such as automated network discovery, customizable dashboards, event logging, and alerting. With its modular architecture and robust API, LibreNMS can be extended to support additional network devices, protocols, and services.

      It is ideal for network administrators and IT professionals who need a reliable, flexible, and scalable solution for monitoring and managing their networks.

      ---

      Notes:

      Variables used:
      | Variable           | Description                                                                    | Default                           |
      | ------------------ | ------------------------------------------------------------------------------ | --------------------------------- |
      | db-name            | Database name that will be used to store LibreNMS data                         | librenms                          |
      | db-user            | Database username                                                              | librenms                          |
      | db-pass            | Database password                                                              | HappyIsHappyDog!                  |
      | timezone           | Timezone set for LibreNMS                                                      | Europe/London                     |
      | smtp_host          | SMTP host that will be used for sending emails                                 | smtp.gmail.com                    |
      | smtp_port          | SMTP port that will be used for sending emails                                 | 587                               |
      | smtp_tls           | Should TLS be enabled for SMTP                                                 | on                                |
      | smtp_starttls      | Should Start TLS be enabled for SMTP                                           | on                                |
      | smtp_tls_checkcert | Should SMTP validate certificates                                              | on                                |
      | smtp_auth          | Should we use SMTP auth                                                        | on                                |
      | smtp_user          | SMTP username                                                                  | fooGoes                           |
      | smtp_password      | SMTP password                                                                  | ToBar                             |
      | smtp_from          | This will set From: for emails ls                                              | foo@gmail.commailto:foo@gmail.com |
    source: https://github.com/librenms/librenms
    tags: LibreNMS Monitoring, Network Monitoring, Server Monitoring, Infrastructure Monitoring, Network Management, SNMP Monitoring, Network Discovery, Alerting, Performance Monitoring, Availability Monitoring, Bandwidth Monitoring, Syslog Monitoring, Event Logging, Network Visualization, Custom Dashboards, Network Troubleshooting, Network Security, Open Source Software, Network Automation, Integration
  variables:
    db-name:
      type: string
      value: librenms
    db-user:
      type: string
      value: librenms
    db-pass:
      type: string
      value: HappyIsHappyDog!
    timezone:
      type: string
      value: Europe/London
    smtp_host:
      type: string
      value: smtp.gmail.com
    smtp_port:
      type: string
      value: 587
    smtp_tls:
      type: string
      value: 'on'
    smtp_starttls:
      type: string
      value: 'on'
    smtp_tls_checkcert:
      type: string
      value: 'on'
    smtp_auth:
      type: string
      value: 'on'
    smtp_user:
      type: string
      value: fooGoes
    smtp_password:
      type: string
      value: ToBar
    smtp_from:
      type: string
      value: foo@gmail.com

db:
  defines: runnable
  inherits: librenms/common
  metadata:
    private: true
  services:
    mariadb:
      container: mariadb
      port: 3306
      protocol: tcp
    redis:
      container: redis
      port: 6379
      protocol: tcp
  checks:
    readiness:
      code: exec("mariadb", "/usr/bin/bash", "-c", "echo 'SELECT version();' | mysql -u${MARIADB_USER} -p${MARIADB_PASSWORD}") contains?("-MariaDB-")
      period: 5
      initialDelay: 5
  containers:
    mariadb:
      image: mariadb
      image-tag: '10.5'
      entrypoint: docker-entrypoint.sh mysqld --innodb-file-per-table=1 --lower-case-table-names=0 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      paths:
        - <- `${monk-volume-path}/librenms/mysql:/var/lib/mysql`
      environment:
        - <- `TZ=${timezone}`
        - <- `MARIADB_DATABASE=${db-name}`
        - <- `MARIADB_USER=${db-user}`
        - <- `MARIADB_PASSWORD=${db-pass}`
        - MARIADB_RANDOM_ROOT_PASSWORD=yes
    redis:
      image: redis
      image-tag: 5.0-alpine
      environment:
        - <- `TZ=${timezone}`

server:
  defines: runnable
  inherits: librenms/common
  metadata:
    private: true
  depends:
    wait-for:
      runnables:
        - librenms/db
      timeout: 60
  connections:
    redis:
      runnable: librenms/db
      service: redis
    mariadb:
      runnable: librenms/db
      service: mariadb
  containers:
    msmtpd:
      image: crazymax/msmtpd
      image-tag: latest
      environment:
        - <- `SMTP_HOST=${smtp_host}`
        - <- `SMTP_PORT=${smtp_port}`
        - <- `SMTP_TLS=${smtp_tls}`
        - <- `SMTP_STARTTLS=${smtp_starttls}`
        - <- `SMTP_TLS_CHECKCERT=${smtp_tls_checkcert}`
        - <- `SMTP_AUTH=${smtp_auth}`
        - <- `SMTP_USER=${smtp_user}`
        - <- `SMTP_PASSWORD=${smtp_password}`
        - <- `SMTP_FROM=${smtp_from}`
    librenms:
      image: librenms/librenms
      image-tag: latest
      cap-add:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
      paths:
        - <- `${monk-volume-path}/librenms/data:/data`
      environment:
        - MEMORY_LIMIT=512M
        - MAX_INPUT_VARS=1000
        - UPLOAD_MAX_SIZE=16M
        - OPCACHE_MEM_SIZE=128
        - REAL_IP_FROM=0.0.0.0/32
        - REAL_IP_HEADER=X-Forwarded-For
        - LOG_IP_VAR=remote_addr
        - CACHE_DRIVER=redis
        - SESSION_DRIVER=redis
        - <- "REDIS_HOST=" connection-hostname("redis") concat-all
        - LIBRENMS_SNMP_COMMUNITY=librenmsdocker
        - LIBRENMS_WEATHERMAP=false
        - LIBRENMS_WEATHERMAP_SCHEDULE=*/5 * * * *
        - <- `TZ=${timezone}`
        - PUID=1000
        - PGID=1000
        - <- "DB_HOST=" connection-hostname("mariadb") concat-all
        - <- `DB_NAME=${db-name}`
        - <- `DB_USER=${db-user}`
        - <- `DB_PASSWORD=${db-pass}`
        - <- `DB_TIMEOUT=60`
    snmptrapd:
      image: librenms/librenms
      image-tag: latest
      cap-add:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
      paths:
        - <- `${monk-volume-path}/librenms/data:/data`
      environment:
        - MEMORY_LIMIT=256M
        - MAX_INPUT_VARS=1000
        - UPLOAD_MAX_SIZE=16M
        - OPCACHE_MEM_SIZE=128
        - REAL_IP_FROM=0.0.0.0/32
        - REAL_IP_HEADER=X-Forwarded-For
        - LOG_IP_VAR=remote_addr
        - CACHE_DRIVER=redis
        - SESSION_DRIVER=redis
        - <- "REDIS_HOST=" connection-hostname("redis") concat-all
        - LIBRENMS_SNMP_COMMUNITY=librenmsdocker
        - LIBRENMS_WEATHERMAP=false
        - LIBRENMS_WEATHERMAP_SCHEDULE=*/5 * * * *
        - <- `TZ=${timezone}`
        - PUID=1000
        - PGID=1000
        - <- "DB_HOST=" connection-hostname("mariadb") concat-all
        - <- `DB_NAME=${db-name}`
        - <- `DB_USER=${db-user}`
        - <- `DB_PASSWORD=${db-pass}`
        - <- `DB_TIMEOUT=60`
        - SIDECAR_SNMPTRAPD=1
    dispatcher:
      image: librenms/librenms
      image-tag: latest
      cap-add:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
      paths:
        - <- `${monk-volume-path}/librenms/data:/data`
      environment:
        - MEMORY_LIMIT=256M
        - MAX_INPUT_VARS=1000
        - UPLOAD_MAX_SIZE=16M
        - OPCACHE_MEM_SIZE=128
        - REAL_IP_FROM=0.0.0.0/32
        - REAL_IP_HEADER=X-Forwarded-For
        - LOG_IP_VAR=remote_addr
        - CACHE_DRIVER=redis
        - SESSION_DRIVER=redis
        - <- "REDIS_HOST=" connection-hostname("redis") concat-all
        - LIBRENMS_SNMP_COMMUNITY=librenmsdocker
        - LIBRENMS_WEATHERMAP=false
        - LIBRENMS_WEATHERMAP_SCHEDULE=*/5 * * * *
        - <- `TZ=${timezone}`
        - PUID=1000
        - PGID=1000
        - <- "DB_HOST=" connection-hostname("mariadb") concat-all
        - <- `DB_NAME=${db-name}`
        - <- `DB_USER=${db-user}`
        - <- `DB_PASSWORD=${db-pass}`
        - <- `DB_TIMEOUT=60`
        - DISPATCHER_NODE_ID=dispatcher1
        - SIDECAR_DISPATCHER=1
    syslogng:
      image: librenms/librenms
      image-tag: latest
      cap-add:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
      paths:
        - <- `${monk-volume-path}/librenms/data:/data`
      environment:
        - MEMORY_LIMIT=256M
        - MAX_INPUT_VARS=1000
        - UPLOAD_MAX_SIZE=16M
        - OPCACHE_MEM_SIZE=128
        - REAL_IP_FROM=0.0.0.0/32
        - REAL_IP_HEADER=X-Forwarded-For
        - LOG_IP_VAR=remote_addr
        - CACHE_DRIVER=redis
        - SESSION_DRIVER=redis
        - <- "REDIS_HOST=" connection-hostname("redis") concat-all
        - LIBRENMS_SNMP_COMMUNITY=librenmsdocker
        - LIBRENMS_WEATHERMAP=false
        - LIBRENMS_WEATHERMAP_SCHEDULE=*/5 * * * *
        - <- `TZ=${timezone}`
        - PUID=1000
        - PGID=1000
        - <- "DB_HOST=" connection-hostname("mariadb") concat-all
        - <- `DB_NAME=${db-name}`
        - <- `DB_USER=${db-user}`
        - <- `DB_PASSWORD=${db-pass}`
        - <- `DB_TIMEOUT=60`
        - SIDECAR_SYSLOGNG=1
  services:
    http:
      container: librenms
      port: 8000
      protocol: tcp
      host-port: 80
    snmptrapd-tcp:
      container: snmptrapd
      port: 162
      protocol: tcp
      host-port: 162
    snmptrapd-udp:
      container: snmptrapd
      port: 162
      protocol: udp
      host-port: 162
    syslogng-tcp:
      container: syslogng
      port: 514
      protocol: tcp
      host-port: 514
    syslogng-udp:
      container: syslogng
      port: 514
      protocol: udp
      host-port: 514
